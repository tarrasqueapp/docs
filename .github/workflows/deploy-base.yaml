name: 'Deploy docs'

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        required: true
        type: string
      ENVIRONMENT_URL:
        required: true
        type: string
      KUBE_NAMESPACE:
        required: true
        type: string
      HELM_ARGS:
        required: true
        type: string

env:
  DOCKERFILE: docker/Dockerfile.prod
  HELM_CHART: docs
  IMAGE_NAME: docs
  KUBE_DEPLOYMENT: docs

jobs:
  deploy-docs:
    runs-on: ubuntu-latest

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    environment:
      name: ${{ inputs.ENVIRONMENT }}
      url: 'https://${{ inputs.ENVIRONMENT_URL }}'

    steps:
      - name: Checkout master
        uses: actions/checkout@v3

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          file: ${{ env.DOCKERFILE }}
          tags: ${{ secrets.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.ENVIRONMENT }}
          build-args: |
            HOST=https://${{ inputs.ENVIRONMENT_URL }}
            NODE_ENV=${{ secrets.NODE_ENV }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.KUBE_CLUSTER }}

      - name: Deploy to DigitalOcean Kubernetes
        run: |
          helm upgrade --install ${{ env.HELM_CHART }} ./helm --namespace ${{ inputs.KUBE_NAMESPACE }} --create-namespace \
            --set image.repository=${{ secrets.REGISTRY }}/${{ env.IMAGE_NAME }} \
            --set image.tag=${{ inputs.ENVIRONMENT }} \
            --set env.HOST="https://${{ inputs.ENVIRONMENT_URL }}" \
            --set env.NODE_ENV="${{ secrets.NODE_ENV }}" \
            ${{ inputs.HELM_ARGS }}

      - name: Verify deployment
        run: kubectl rollout status deployment/${{ env.KUBE_DEPLOYMENT }} --namespace ${{ inputs.KUBE_NAMESPACE }} --timeout 2m
